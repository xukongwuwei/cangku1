网页布局要学习三大核心，盒子模型，浮动，定位，学号盒子模型能非常好的布局页面

网页布局的过程：
1. 先准备好相关的网页元素，网页元素基本都是盒子box
2. 利用css设置好盒子样式，然后摆放到相应的位置
3. 往盒子里面装内容

网页布局的核心本质就是利用CSS控制盒子

盒子模型box model的组成：
所谓 盒子模型 ：就是把html页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器
css盒子模型本质上就是一个盒子，封装周围的html元素，这个盒子里面包括：有border边框，content内容，padding内边距，margin外边距

边框（border）：
border可以设置元素的边框。
边框由三部分组成：边框宽度（粗细），边框样式，边框颜色
语法：
border:border-width //定义边框的粗细，单位是px
           border-style  //边框的样式	
           border-color //边框的颜色
border-style的样式有：none（无边框），solid（视线边框），dashed（虚线边框），dotted（点线边框），hidden（隐藏边框），double（双线边框），groove（3D凹槽），ridge（菱形边框），inset（3D凹边），outset（3D凸边）
边框的复合写法（简写）：
border: width style color；没有顺序
边框也可以分开来写：
border-top: 1px solid red;  //只设定上边框
         -bottm	//下边框
         -left               //左边框
          -right            //右边框
表格的细线边框：
border-collapse属性控制浏览器绘制表格边框的方式，它控制相邻单元格的边框
语法：
border-collapse:collapse;//collapse单词是合并的意思，border-collapse:collapse;表示相邻边框合并在一起
边框会影响盒子的实际大小，因此我们有两种方案解决：
1. 测量盒子大小的时候不量边框
2. 如果测量的时候包含了边框，则需要width和height减去边框宽度

内边距padding：
padding 属性用于设置内边框，即边框和内容之间的距离
语法：
padding-left: 1px;	  //左内边距
padding-right: 1px;	  //右内边距
padding-top: 1px;	  //上内边距
padding-bottm: 1px;   //下内边距
padding的简写：可以有一到四个值
padding：1px;	//1个值代表上下左右的内边框都可以设置
padding：1px 2px;   //2个值代表上下和左右
padding：1px 2px 3px;  //3个值代表上和左右和下
padding：1px 2px 3px 4px; //4个值代表上和右和下和左，顺时针方向走
实际发开，这四种情况都会遇到
padding也会影响盒子实际大小，也就是说，如果盒子已经有了宽度和高度，此时在指定内边框，会撑大盒子，解决方案：如果保证盒子跟效果图大小保持一致，则让width和height减去多出来的内边框大小即可
如果盒子本身没有指定width和height属性，则此时padding不会撑开盒子大小

外边距margin：
margin 属性用于设置外边框，即控制盒子和盒子之间的距离
语法：
margin-left: 1px;  //左外边距
margin-right: 1px; //右外边距
margin-top: 1px;  //上外边距
margin-bottom: 1px;  //下外边距
margin的简写方式：代表意义和padding一样
margin：1px;	//1个值代表上下左右的内边框都可以设置
margin：1px 2px;   //2个值代表上下和左右
margin：1px 2px 3px;  //3个值代表上和左右和下
margin：1px 2px 3px 4px; //4个值代表上和右和下和左，顺时针方向走
外边距典型应用：
外边距可以让块级盒子水平居中，但必须满足两个条件：
1. 盒子必须制定了宽度width
2. 盒子左右的外边距都是auto（自适应）
语法：
.header {width: 960px;margin: 0 auto;}
常见的写法，以下三种都可以：
第一种： margin-left:auto;margin-right: auto;
第二种:   margin: auto;
第三种： margin: 0 auto;  //这是最常用的
注意：以上方法是让块级元素水平居中,行内元素或者行内块元素水平居中给其父元素添加text-align:center即可
外边距合并：
使用margin定义块级元素的垂直外边距时，可能会出现外边距的合并
主要有两种情况：1.相邻块元素垂直外边距的合并 2.嵌套块元素垂直外边距的塌陷
1.相邻块元素垂直外边距的合并：两个盒子之间的距离由他们其中一个的最大值决定
当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边框距margin-bottom,下面的元素有margin-top，那么他们之间的垂直间距不是margin-bottom跟margin-top的和，而是取两个值中的较大者当做他们之间的外边距，这种现象被称为相邻块元素垂直外边距的合并。
解决方案：尽量只给一个盒子添加margin值
2.嵌套块元素垂直外边距的塌陷：
对于两个嵌套关系（父子关系）的块元素，父元素有上边距的同时子元素也会有上外边框，此时父元素会塌陷较大的外边距值，父元素外边距和子元素外边距谁大就取谁的，如何解决？，同级可以相互作用边距，父子级需要有参照物边框，父级有参照物边框，子级才能和父级外边距边框操作
解决方案：
1. 可以为父元素定义上边框
2. 可以为父元素定义上内边框
3. 可以为父元素添加overflow:hidden;
清除内外边距：
 网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致，因此我们在不拒签，首先要清除网页元素的内外边距
语法： //这也是css的第一行代码，清除网页元素的内外边距
* {
     padding: 0; //清除内边距
     margin :0  //清除外边距
} 
需要注意的是：行内元素为了照顾兼容性，尽量只设置左右边距，不要设置上下左右边距，但是转换为块级元素和行内块元素就可以设置上下左右边距了